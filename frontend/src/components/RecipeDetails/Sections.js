import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useScroll } from "@/util/hooks";
const SectionBar = ({ className, title, description, nutrition, ingredients, instructions }) => {
    const { y } = useScroll();
    function checkBounds(element) {
        return y >= element?.getBoundingClientRect().top + y - 150 && y < element?.getBoundingClientRect().top + y - 150 + element?.offsetHeight;
    }
    function handleChange(element) {
        const position = (element.getBoundingClientRect().top || 0) + scrollY - 150;
        scrollTo({ top: position, behavior: "smooth" });
    }
    return (_jsx("div", { className: className, children: _jsxs("div", { children: [_jsx("h1", { className: "hidden md:flex md:flex-col font-bold text-3xl py-2 px-3", children: "Quick Scroll" }), _jsxs("div", { className: "flex flex-col *:p-3", children: [_jsxs("label", { className: "hover:cursor-pointer hover:bg-slate-200 has-[:checked]:hover:bg-orange-200 has-[:checked]:bg-orange-100 has-[:checked]:border-r-[6px] has-[:checked]:border-r-orange-500 transition-all", children: [_jsx("input", { type: "radio", name: "section", value: "title", checked: checkBounds(title), onChange: () => title != null && handleChange(title), className: "hidden" }), _jsx("span", { className: "font-[600]", children: "Title" })] }), _jsxs("label", { className: "hover:cursor-pointer hover:bg-slate-200 has-[:checked]:hover:bg-orange-200 has-[:checked]:bg-orange-100 has-[:checked]:border-r-[6px] has-[:checked]:border-r-orange-500 transition-all", children: [_jsx("input", { type: "radio", name: "section", value: "description", checked: description != null && checkBounds(description), onChange: () => description != null && handleChange(description), className: "hidden" }), _jsx("span", { className: "font-[600]", children: "Description" })] }), _jsxs("label", { className: "hover:cursor-pointer hover:bg-slate-200 has-[:checked]:hover:bg-orange-200 has-[:checked]:bg-orange-100 has-[:checked]:border-r-[6px] has-[:checked]:border-r-orange-500 transition-all", children: [_jsx("input", { type: "radio", name: "section", value: "nutrition", checked: nutrition != null && checkBounds(nutrition), onChange: () => nutrition != null && handleChange(nutrition), className: "hidden" }), _jsx("span", { className: "font-[600]", children: "Nutrition" })] }), _jsxs("label", { className: "hover:cursor-pointer hover:bg-slate-200 has-[:checked]:hover:bg-orange-200 has-[:checked]:bg-orange-100 has-[:checked]:border-r-[6px] has-[:checked]:border-r-orange-500 transition-all", children: [_jsx("input", { type: "radio", name: "section", value: "ingredients", checked: ingredients != null && checkBounds(ingredients), onChange: () => ingredients != null && handleChange(ingredients), className: "hidden" }), _jsx("span", { className: "font-[600]", children: "Ingredients" })] }), _jsxs("label", { className: "hover:cursor-pointer hover:bg-slate-200 has-[:checked]:hover:bg-orange-200 has-[:checked]:bg-orange-100 has-[:checked]:border-r-[6px] has-[:checked]:border-r-orange-500 transition-all", children: [_jsx("input", { type: "radio", name: "section", value: "instructions", checked: instructions != null && checkBounds(instructions), onChange: () => instructions != null && handleChange(instructions), className: "hidden" }), _jsx("span", { className: "font-[600]", children: "Instructions" })] })] })] }) }));
};
export default SectionBar;
