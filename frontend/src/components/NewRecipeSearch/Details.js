import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useRef, useContext } from "react";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { Badge } from "@/components/ui/badge";
import { ScrollArea, ScrollBar } from "@/components/ui/scroll-area";
import { DialogDescription, DialogTitle } from "@/components/ui/dialog";
import { useToast } from "@/components/ui/use-toast";
import { Clock, Microwave, Clipboard, Earth, Bookmark, Flag, ExternalLink } from "lucide-react";
import { nanoid } from "nanoid";
import { AppContext } from "@/App";
import { collection, addDoc } from "firebase/firestore";
import { firestore } from "../../../../firebaseConfig";
export default function Details({ recipe, matches }) {
    const { toast } = useToast();
    const { user } = useContext(AppContext);
    const recipesCollectionRef = useRef(collection(firestore, "recipes"));
    async function saveRecipe(recipe) {
        try {
            await addDoc(recipesCollectionRef.current, { ...recipe, userId: user?.uid });
            toast({
                title: "Success!",
                description: "Recipe added successfully."
            });
        }
        catch (err) {
            toast({
                title: "Error!",
                description: "Failed to add recipe."
            });
            console.error(err.message);
        }
    }
    return (_jsx(_Fragment, { children: matches
            ? _jsxs("div", { className: "aspect-[9/10] min-w-[630px] min-h-[700px] max-w-[675px] max-h-[750px] rounded-lg", children: [_jsxs("div", { className: "overflow-hidden row-span-1 col-span-1 grid grid-rows-1 grid-cols-2 p-2 gap-5 size-full", children: [_jsxs("div", { className: "grid grid-rows-[40%_repeat(2,_auto)] grid-cols-[100%] row-span-1 gap-3", children: [_jsx("div", { className: "overflow-hidden row-span-1 col-span-1 rounded-2xl border-none", children: _jsx("img", { src: recipe.image, alt: "Sample Image", className: "size-full hover:scale-[105%] transition" }) }), _jsxs("div", { className: "col-span-1 flex justify-between items-center gap-2 rounded-md *:flex-1 *:flex *:h-full *:flex-col *:p-2 *:justify-center *:items-center *:bg-orange-500 *:text-white *:rounded-md", children: [_jsxs("div", { className: "flex gap-1", children: [_jsx(Clock, {}), _jsx("div", { className: "text-center", children: _jsxs("p", { children: [_jsx("b", { children: recipe.times.readyTime }), " mins"] }) })] }), _jsxs("div", { className: "flex gap-1", children: [_jsx(Microwave, {}), _jsx("div", { className: "text-center", children: _jsx("b", { children: recipe.times.cookTime || "-" }) })] }), _jsxs("div", { className: "flex gap-1", children: [_jsx(Clipboard, {}), _jsx("div", { className: "text-center", children: _jsx("p", { children: recipe.times.prepTime > 0 ? _jsxs(_Fragment, { children: [_jsx("b", { children: recipe.times.prepTime }), " mins"] }) : _jsx("b", { children: "-" }) }) })] })] }), _jsxs("div", { className: "overflow-hidden bg-orange-100 p-4 flex flex-col rounded-lg", children: [_jsx("h1", { className: "text-3xl font-bold", children: "Nutrition" }), _jsxs("p", { className: "text-sm", children: ["Serving Size: ", `${recipe.servingSize.amount}${recipe.servingSize.unit}`] }), _jsxs(ScrollArea, { className: "flex-1 pr-[16px]", type: "scroll", children: [recipe.nutrition.map((nutrition) => (_jsxs("div", { className: "flex justify-between my-2", children: [_jsxs("h1", { className: "text-lg", children: [nutrition.name, " ", _jsxs("span", { className: "text-sm text-muted-foreground", children: ["(", nutrition.unit, ")"] })] }), _jsx("h1", { className: "bg-orange-600 px-4 w-16 font-medium text-white rounded-full text-center pointer-events-none", children: Math.round(nutrition.amount) })] }, nanoid()))), _jsx(ScrollBar, {})] })] })] }), _jsxs("div", { className: "grid grid-rows-[minmax(0,_auto)_minmax(40%,_1fr)] grid-cols-1 gap-2", children: [_jsxs("div", { children: [_jsx(DialogTitle, { className: "font-bold text-[min(3vw,_36px)] leading-[min(4vh,_2.5rem)]", children: recipe.title }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Link, { to: recipe.source?.url, target: "_blank", className: "flex justify-center items-center size-8 my-2", children: _jsx(Earth, { size: 32, className: "text-muted-foreground hover:scale-110 transition" }) }), _jsx("p", { children: recipe.source?.name })] }), _jsx("div", { className: "flex flex-wrap items-center gap-x-1 gap-y-2", children: recipe.diets?.map((diet) => _jsx(Badge, { className: "line-clamp-1 pointer-events-none bg-orange-500", children: diet }, nanoid())) }), _jsx("div", { className: "group grid grid-cols-2 gap-2 mt-2 *:border *:border-slate-300 *:rounded-sm group-hover:bg-orange-500", children: recipe.dishTypes?.map((dish) => (_jsx("h1", { className: "text-[min(1.5vw,_16px)] hover:cursor-default border border-slate-400 hover:bg-orange-500 hover:text-white transition text-center py-2 px-3 odd:last:col-span-2", children: dish }, nanoid()))) })] }), _jsxs("div", { className: "grid grid-rows-[minmax(0,_auto)_1fr_minmax(0,_auto)] gap-2", children: [_jsx("h1", { className: "text-2xl font-bold mx-0 my-1", children: "Description" }), _jsxs(ScrollArea, { className: "pr-5", type: "scroll", children: [_jsx(DialogDescription, { className: "text-base text-black", children: recipe.description }), _jsx(ScrollBar, {})] }), _jsxs("div", { className: "grid grid-cols-3 gap-2 *:bg-orange-500", children: [_jsxs(Button, { className: "group h-auto flex flex-col items-start px-2 hover:bg-orange-700", onClick: () => saveRecipe(recipe), children: [_jsx(Bookmark, {}), _jsx(Separator, { className: "w-3/4 my-2 group-hover:w-full transition-all" }), _jsx("span", { children: "Save" })] }), _jsxs(Button, { className: "group h-auto flex flex-col items-start px-2 hover:bg-orange-700", children: [_jsx(ExternalLink, {}), _jsx(Separator, { className: "w-3/4 my-2 group-hover:w-full transition-all" }), _jsx("span", { children: "Share" })] }), _jsxs(Button, { className: "group h-auto flex flex-col items-start px-2 hover:bg-orange-700", children: [_jsx(Flag, {}), _jsx(Separator, { className: "w-3/4 my-2 group-hover:w-full transition-all" }), _jsx("span", { children: "Report" })] })] })] })] })] }), _jsxs("div", { className: "row-span-1 col-span-1 grid grid-rows-1 grid-cols-2 p-2 gap-4 min-h-auto max-h-full rounded-lg", children: [_jsxs("div", { className: "flex flex-col p-4 border-2 border-slate-200 rounded-md", children: [_jsx("h1", { className: "font-bold text-2xl", children: "Ingredients" }), _jsxs(ScrollArea, { className: "flex-1 mt-2", type: "scroll", children: [_jsx("div", { className: "flex flex-col gap-2", children: recipe.ingredients.map((ingredient) => (_jsxs("div", { className: "bg-slate-200 rounded-md text-center py-2 px-1", children: [_jsxs("p", { className: "font-bold text-sm text-muted-foreground", children: [ingredient.amount, " ", ingredient.unit] }), _jsx("h1", { className: "text-md font-bold text-wrap", children: ingredient.name })] }, nanoid()))) }), _jsx(ScrollBar, {})] })] }), _jsxs("div", { className: "flex flex-col gap-2 p-4 bg-orange-100 rounded-lg", children: [_jsx("h1", { className: "font-bold text-2xl", children: "Instructions" }), _jsxs(ScrollArea, { className: "flex-1", type: "scroll", children: [_jsx("div", { className: "flex flex-col gap-5", children: recipe.instructions.map((instruction, index) => (_jsxs("div", { className: "flex items-start gap-3", children: [_jsx("div", { className: "sticky top-0 flex justify-center items-center size-8 bg-orange-500 p-4 text-white rounded-full", children: index + 1 }), _jsx("p", { children: instruction })] }, nanoid()))) }), _jsx(ScrollBar, {})] })] })] })] })
            : _jsxs("div", { className: "aspect-[7/12] w-[350px] h-[600px]", children: [_jsxs("div", { className: "flex flex-col size-full p-2", children: [_jsx("div", { className: "overflow-hidden rounded-lg", children: _jsx("img", { src: recipe.image, alt: recipe.title, className: "w-full hover:scale-[105%] transition" }) }), _jsxs("div", { className: "flex-1 size-full grid grid-rows-[max-content_repeat(2,_fit-content(100px))_15%] grid-cols-[auto_35%] gap-y-2 gap-x-4", children: [_jsx(DialogTitle, { className: "row-start-1 col-span-2 flex justify-center items-center font-bold text-xl py-2", children: recipe.title }), _jsxs("div", { className: "row-start-2 col-start-2 row-span-2 col-span-1 flex flex-col gap-2 justify-between", children: [recipe.diets && recipe.diets.length > 0 &&
                                                _jsx("div", { className: "flex flex-col items-stretch gap-[6px]", children: recipe.diets.slice(0, 3).map((diet) => _jsx(Badge, { className: "pointer-events-none bg-orange-500", children: diet }, nanoid())) }), recipe.dishTypes?.slice(0, recipe.diets && recipe.diets.length > 0 ? 3 : 6).map((dish) => (_jsx("div", { className: "flex-1 flex justify-center items-center text-sm hover:cursor-default border border-slate-300 hover:bg-orange-500 hover:text-white transition py-1 px-3 rounded-sm", children: dish }, nanoid())))] }), _jsxs(ScrollArea, { className: "row-span-2 col-start-1 pr-4", type: "scroll", children: [_jsx("h1", { className: "font-bold", children: "Description" }), _jsx(DialogDescription, { className: "text-sm text-black", children: recipe.description }), _jsx(ScrollBar, {})] }), _jsxs("div", { className: "col-span-2 grid grid-cols-3 gap-2 *:bg-orange-500", children: [_jsxs(Button, { className: "group h-auto flex items-center gap-2 px-2 hover:bg-orange-700", onClick: () => saveRecipe(recipe), children: [_jsx(Bookmark, {}), _jsx("span", { children: "Save" })] }), _jsxs(Button, { className: "group h-auto flex items-center gap-2 px-2 hover:bg-orange-700", children: [_jsx(ExternalLink, {}), _jsx("span", { children: "Share" })] }), _jsxs(Button, { className: "group h-auto flex items-center gap-2 px-2 hover:bg-orange-700", children: [_jsx(Flag, {}), _jsx("span", { children: "Report" })] })] })] })] }), _jsxs("div", { className: "size-full grid grid-rows-[10%_repeat(2,_40%)_1fr] grid-cols-2 gap-2 px-2", children: [_jsxs("div", { className: "col-span-2 flex justify-between gap-2 *:flex-1 *:bg-orange-500 *:flex *:flex-col *:justify-center *:items-center *:gap-2 *:py-1 *:text-white *:rounded-md", children: [_jsxs("div", { children: [_jsx(Clock, {}), _jsx("div", { className: "text-center text-sm", children: _jsxs("p", { children: [_jsx("b", { children: recipe.times.readyTime }), " mins"] }) })] }), _jsxs("div", { children: [_jsx(Microwave, {}), _jsx("div", { className: "text-center text-sm", children: _jsx("p", { children: recipe.times.cookTime > 0 ? _jsxs(_Fragment, { children: [_jsx("b", { children: recipe.times.cookTime }), " mins"] }) : _jsx("b", { children: "-" }) }) })] }), _jsxs("div", { children: [_jsx(Clipboard, {}), _jsx("div", { className: "text-center text-sm", children: _jsx("p", { children: recipe.times.prepTime > 0 ? _jsxs(_Fragment, { children: [_jsx("b", { children: recipe.times.prepTime }), " mins"] }) : _jsx("b", { children: "-" }) }) })] })] }), _jsxs("div", { className: "flex flex-col bg-orange-100 rounded-md", children: [_jsx("h1", { className: "text-lg font-bold p-2 -mb-3", children: "Nutrition" }), _jsxs(ScrollArea, { className: "p-2", type: "scroll", children: [recipe.nutrition.map((nutrition) => (_jsxs("div", { className: "flex justify-between my-2", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-sm -my-2", children: nutrition.name }), _jsxs("span", { className: "text-sm text-muted-foreground", children: ["(", nutrition.unit, ")"] })] }), _jsx("h1", { className: "h-full bg-orange-600 w-12 font-sm text-xs text-white rounded-sm text-center pointer-events-none", children: Math.round(nutrition.amount) })] }, nanoid()))), _jsx(ScrollBar, {})] })] }), _jsxs("div", { className: "flex flex-col justify-between row-start-3 p-2 border-2 border-slate-200 rounded-md", children: [_jsx("h1", { className: "font-bold text-lg", children: "Ingredients" }), _jsxs(ScrollArea, { className: "flex-1 mt-2", type: "scroll", children: [_jsx("div", { className: "flex flex-col gap-2", children: recipe.ingredients.map((ingredient) => (_jsxs("div", { className: "bg-slate-200 rounded-md text-center py-2 px-1", children: [_jsxs("p", { className: "font-bold text-xs text-muted-foreground", children: [ingredient.amount, " ", ingredient.unit] }), _jsx("h1", { className: "text-sm font-bold text-wrap", children: ingredient.name })] }, nanoid()))) }), _jsx(ScrollBar, {})] })] }), _jsxs("div", { className: "flex flex-col col-start-2 row-span-2 rounded-md p-2 bg-orange-100", children: [_jsx("h1", { className: "font-bold text-lg", children: "Instructions" }), _jsxs(ScrollArea, { className: "flex-1", type: "scroll", children: [_jsx("div", { className: "flex flex-col gap-2", children: recipe.instructions.map((instruction, index) => (_jsxs("div", { className: "flex flex-col items-center gap-2", children: [_jsx("div", { className: "flex justify-center items-center size-4 p-3 bg-orange-500 text-white rounded-full", children: index + 1 }), _jsx("p", { className: "text-sm", children: instruction })] }, nanoid()))) }), _jsx(ScrollBar, {})] })] }), _jsxs("div", { className: "col-span-2 flex justify-center items-center gap-2", children: [_jsx(Link, { to: recipe.source?.url, target: "_blank", children: _jsx(Earth, { size: 24, className: "text-muted-foreground hover:scale-110 transition" }) }), _jsx("h1", { children: recipe.source?.name })] })] })] }) }));
}
