import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Tabs, TabsContent, TabsList, TabsTrigger, } from "@/components/ui/tabs";
import { ArrowUpRight, Earth, Minus, Plus } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { Link } from "react-router-dom";
import { nanoid } from "nanoid";
import { ScrollArea, ScrollBar } from "../ui/scroll-area";
import { useState } from "react";
import Delete from "./Delete";
export default function Description({ isDeleting, activeRecipe, deleteRecipe }) {
    const [count, setCount] = useState(1);
    return (_jsxs("div", { className: "size-full grid grid-rows-2 grid-cols-2 gap-4 rounded-lg", children: [_jsxs("div", { className: "row-start-1 col-start-1 row-span-1 col-span-1 flex flex-col gap-2", children: [_jsx("h1", { className: "text-3xl font-bold line-clamp-2", children: activeRecipe.title }), _jsxs("div", { className: "flex gap-2 *:flex-1", children: [_jsx("button", { className: "text-nowrap py-1 px-2 border border-slate-400 hover:bg-slate-200 transition rounded-md", children: _jsxs(Link, { to: `/recipes/${activeRecipe.id}`, target: "_blank", className: "flex justify-between items-center gap-2", children: [_jsx("span", { className: "font-[600] text-sm", children: "Full Version" }), _jsx(ArrowUpRight, { size: 20 })] }) }), _jsx(Delete, { isDeleting: isDeleting, id: activeRecipe.id, deleteRecipe: deleteRecipe })] }), _jsx("div", { className: "flex flex-wrap gap-1", children: activeRecipe.diets?.map((diet) => _jsx(Badge, { className: "bg-orange-500 pointer-events-none select-none", children: diet }, nanoid())) }), _jsx("div", { className: "flex-1 flex flex-wrap justify-between gap-2", children: activeRecipe.dishTypes && activeRecipe.dishTypes.length > 0 ?
                            activeRecipe.dishTypes?.map((dish) => (_jsx("div", { className: "text-nowrap flex-1 text-center border border-slate-400 rounded-md flex justify-center items-center py-2 px-3 hover:bg-orange-500 hover:text-white transition", children: dish }, nanoid()))) :
                            _jsx("div", { className: "size-full flex justify-center items-center border-2 border-dashed border-slate-400 rounded-md", children: _jsx("h1", { className: "font-bold text-xl text-slate-400", children: "No diet types found!" }) }) }), activeRecipe.source &&
                        _jsxs("div", { className: "flex items-center gap-2 group", children: [_jsx(Link, { to: activeRecipe.source.url, target: "_blank", children: _jsx(Earth, { className: "group-hover:scale-[125%] transition", size: 28 }) }), _jsx("span", { className: "text-muted-foreground", children: activeRecipe.source.name })] })] }), _jsx("img", { src: activeRecipe.image, alt: activeRecipe.title, className: "row-start-1 col-start-2 row-span-1 col-span-1 size-full rounded-2xl" }), _jsxs(Tabs, { defaultValue: "summary", className: "flex flex-col items-center row-start-2 col-start-1 row-span-1 col-span-2", children: [_jsxs(TabsList, { className: "w-full flex justify-around bg-transparent", children: [_jsx(TabsTrigger, { value: "summary", className: "data-[state=active]:border-b-[2px] data-[state=active]:border-b-orange-500 rounded-none", children: "Summary" }), _jsx(TabsTrigger, { value: "nutrition", className: "data-[state=active]:border-b-[2px] data-[state=active]:border-b-orange-500 rounded-none", children: "Nutrition" }), _jsx(TabsTrigger, { value: "ingredients", className: "data-[state=active]:border-b-[2px] data-[state=active]:border-b-orange-500 rounded-none", children: "Ingredients" }), _jsx(TabsTrigger, { value: "instructions", className: "data-[state=active]:border-b-[2px] data-[state=active]:border-b-orange-500 rounded-none", children: "Instructions" })] }), _jsx(TabsContent, { value: "summary", className: "w-full", children: _jsxs(ScrollArea, { className: "h-[33vh] rounded-md pr-4", type: "always", children: [_jsxs("div", { children: [_jsx("h1", { className: "font-bold text-xl mb-2", children: "Description" }), _jsx("p", { className: "indent-8", children: activeRecipe.description })] }), _jsx(ScrollBar, {})] }) }), _jsx(TabsContent, { value: "nutrition", className: "w-full", children: _jsxs(ScrollArea, { className: "h-[33vh] rounded-md pr-4", type: "always", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("h1", { className: "font-bold text-lg", children: ["Serving Size: ", `${activeRecipe.servingSize.amount} ${activeRecipe.servingSize.unit}`] }), _jsxs("div", { className: "flex justify-between items-center gap-3", children: [_jsx("button", { onClick: () => count > 1 && setCount(c => c - 1), className: "size-6 bg-orange-500 rounded-sm text-white flex justify-center items-center", children: _jsx(Minus, { size: 14 }) }), _jsx("span", { className: "text-xl font-[600]", children: count }), _jsx("button", { onClick: () => setCount(c => c + 1), className: "size-6 bg-orange-500 rounded-sm text-white flex justify-center items-center", children: _jsx(Plus, {}) })] })] }), _jsx("div", { children: activeRecipe.nutrition.map((nutrition) => (_jsxs("div", { className: "flex justify-between items-center py-4 border-b border-b-slate-300 last:border-none", children: [_jsxs("span", { children: [nutrition.name, " ", _jsxs("span", { className: "text-sm text-muted-foreground", children: ["(", nutrition.unit, ")"] })] }), _jsx("div", { className: "flex justify-center items-center bg-orange-500 rounded-full min-w-[75px] h-[25px] text-white font-[600] py-2", children: Math.round(nutrition.amount) * count })] }, nanoid()))) })] }), _jsx(ScrollBar, {})] }) }), _jsx(TabsContent, { value: "ingredients", className: "w-full", children: _jsxs(ScrollArea, { className: "h-[33vh] w-full rounded-md", type: "always", children: [_jsx("div", { className: "grid grid-cols-2 gap-2", children: activeRecipe.ingredients.map((ingredient) => (_jsxs("div", { className: "border border-slate-400 px-2 py-1 odd:last:col-span-2 rounded-md", children: [_jsx("span", { className: "font-bold text-xl", children: ingredient.amount }), _jsxs("span", { className: "text-sm", children: [" ", ingredient.unit] }), _jsx("p", { className: "text-sm text-muted-foreground", children: ingredient.name })] }, nanoid()))) }), _jsx(ScrollBar, {})] }) }), _jsx(TabsContent, { value: "instructions", className: "w-full", children: _jsxs(ScrollArea, { className: "h-[33vh] w-full rounded-md", type: "always", children: [_jsx("div", { className: "flex flex-col gap-2", children: activeRecipe.instructions.map((instruction, index) => (_jsxs("div", { className: "p-4 rounded-md bg-orange-100", children: [_jsx("h1", { className: "size-8 font-[600] flex justify-center items-center bg-orange-500 text-white rounded-full mb-2", children: index + 1 }), _jsx("p", { children: instruction })] }, nanoid()))) }), _jsx(ScrollBar, {})] }) })] })] }));
}
